version: '3'

output: prefixed

vars:
  COVER_NAME: 'coverage'
  COVER_FILE: '{{.COVER_NAME}}.out'
  COVER_HTML: '{{.COVER_NAME}}.html'

tasks:

  go-test:
    desc: 'runs `go test` in race detection and atomic coverage collection mode'
    dir: '{{.USER_WORKING_DIR}}'
    cmds:
      - cmd: go test -v ./... -race -coverprofile={{.COVER_FILE}} -covermode=atomic

  go-cover:
    desc: 'runs the go-test task, the `cover` Go tool and displays the generated HTML report'
    dir: '{{.USER_WORKING_DIR}}'
    deps: 
      - task: go-test
    cmds:
      - cmd: go tool cover -html={{.COVER_FILE}} -o {{.COVER_HTML}}
      - cmd: cmd /c start {{.COVER_HTML}}
        platforms: [windows]

  go-lint:
    desc: 'runs `golangci-lint` with the first recursively found config file'
    dir: '{{.USER_WORKING_DIR}}'
    vars:
      CONFIG_FILE:
        sh: where /r "{{.USER_WORKING_DIR}}" .golangci.*
    cmds:
      - cmd: 'echo found config file: "{{.CONFIG_FILE}}"'
      - cmd: golangci-lint run --config="{{.CONFIG_FILE}}"
    platforms: [windows]
